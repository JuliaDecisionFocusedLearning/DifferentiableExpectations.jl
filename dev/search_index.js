var documenterSearchIndex = {"docs":
[{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/#Public","page":"API reference","title":"Public","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [DifferentiableExpectations]\nPrivate = false","category":"page"},{"location":"api/#Private","page":"API reference","title":"Private","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [DifferentiableExpectations]\nPublic = false","category":"page"},{"location":"api/#DifferentiableExpectations.AbstractExpectation","page":"API reference","title":"DifferentiableExpectations.AbstractExpectation","text":"AbstractExpectation{threaded}\n\nAbstract supertype for expectation wrappers.\n\nThe type parameter threaded is a Bool stating whether or not the Monte-Carlo samples should be computed in parallel.\n\nImplementing subtypes must have the following fields:\n\nrng::AbstractRNG: the random number generator\nnb_samples::Integer: the number of samples to draw\n\n\n\n\n\n","category":"type"},{"location":"#DifferentiableExpectations.jl","page":"Home","title":"DifferentiableExpectations.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Dev) (Image: Build Status) (Image: Coverage) (Image: Code Style: Blue)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package revolves around functions defined as expectations:","category":"page"},{"location":"","page":"Home","title":"Home","text":"F(theta) = mathbbE_p_thetaf(X)","category":"page"},{"location":"","page":"Home","title":"Home","text":"It allows the computation of derivatives with respect to theta, and their approximation with Monte-Carlo samples.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For more details, refer to the following paper:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Monte-Carlo Gradient Estimation in Machine Learning, Mohamed et al. (2020)","category":"page"}]
}
