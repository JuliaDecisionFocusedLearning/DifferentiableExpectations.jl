var documenterSearchIndex = {"docs":
[{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/#Public","page":"API reference","title":"Public","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [DifferentiableExpectations]\nPrivate = false","category":"page"},{"location":"api/#DifferentiableExpectations.DifferentiableExpectations","page":"API reference","title":"DifferentiableExpectations.DifferentiableExpectations","text":"DifferentiableExpectations\n\nA Julia package for differentiating through expectations with Monte-Carlo estimates.\n\nExports\n\nDifferentiableExpectation\nFixedAtomsProbabilityDistribution\nREINFORCE\n\n\n\n\n\n","category":"module"},{"location":"api/#DifferentiableExpectations.DifferentiableExpectation","page":"API reference","title":"DifferentiableExpectations.DifferentiableExpectation","text":"DifferentiableExpectation{threaded}\n\nAbstract supertype for differentiable parametric expectations F : Œ∏ -> ùîº[f(X)] where X ‚àº p(Œ∏), whose value and derivative are approximated with Monte-Carlo averages.\n\nType parameters\n\nthreaded::Bool: specifies whether the sampling should be performed in parallel (with OhMyThreads.jl)\n\nRequired fields\n\nf: the function applied inside the expectation\ndist_constructor: the constructor of the probability distribution, such that calling D(Œ∏...) generates an object corresponding to p(Œ∏)\nrng: the random number generator\nnb_samples: the number of Monte-Carlo samples\n\n\n\n\n\n","category":"type"},{"location":"api/#DifferentiableExpectations.DifferentiableExpectation-Union{Tuple, Tuple{threaded}} where threaded","page":"API reference","title":"DifferentiableExpectations.DifferentiableExpectation","text":"(F::DifferentiableExpectation)(Œ∏...; kwargs...)\n\nReturn a Monte-Carlo average (1/s) ‚àëf(x·µ¢) where the x·µ¢ ‚àº p(Œ∏) are iid samples.\n\n\n\n\n\n","category":"method"},{"location":"api/#DifferentiableExpectations.FixedAtomsProbabilityDistribution","page":"API reference","title":"DifferentiableExpectations.FixedAtomsProbabilityDistribution","text":"FixedAtomsProbabilityDistribution\n\nA probability distribution with finite support and fixed atoms.\n\nWhenever its expectation is differentiated, only the weights are considered active, whereas the atoms are considered constant.\n\nFields\n\natoms::Vector\nweights::Vector\n\n\n\n\n\n","category":"type"},{"location":"api/#DifferentiableExpectations.REINFORCE","page":"API reference","title":"DifferentiableExpectations.REINFORCE","text":"REINFORCE{threaded} <: DifferentiableExpectation{threaded}\n\nDifferentiable parametric expectation F : Œ∏ -> ùîº[f(X)] where X ‚àº p(Œ∏) using the REINFORCE (or score function) gradient estimator:\n\n‚àÇF(Œ∏) = ùîº[f(X) ‚àá‚ÇÅlogp(Œ∏, x)·µÄ]\n\nConstructor\n\nREINFORCE(\n    f,\n    dist_constructor,\n    dist_gradlogpdf=nothing;\n    rng=Random.default_rng(),\n    nb_samples=1,\n    threaded=false\n)\n\nFields\n\nf::Any\ndist_constructor::Any\ndist_logdensity_grad::Any\nrng::Random.AbstractRNG\nnb_samples::Int64\n\nSee also\n\nDifferentiableExpectation\n\n\n\n\n\n","category":"type"},{"location":"api/#Private","page":"API reference","title":"Private","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [DifferentiableExpectations]\nPublic = false","category":"page"},{"location":"api/#DifferentiableExpectations.presamples-Tuple{DifferentiableExpectation, Vararg{Any}}","page":"API reference","title":"DifferentiableExpectations.presamples","text":"presamples(F::DifferentiableExpectation, Œ∏...)\n\nReturn a vector [x‚ÇÅ, ..., x‚Çõ] or matrix [x‚ÇÅ ... x‚Çõ] where the x·µ¢ ‚àº p(Œ∏) are iid samples.\n\n\n\n\n\n","category":"method"},{"location":"api/#DifferentiableExpectations.samples-Union{Tuple{threaded}, Tuple{DifferentiableExpectation{threaded}, Vararg{Any}}} where threaded","page":"API reference","title":"DifferentiableExpectations.samples","text":"samples(F::DifferentiableExpectation, Œ∏...; kwargs...)\n\nReturn a vector [f(x‚ÇÅ), ..., f(x‚Çõ)] where the x·µ¢ ‚àº p(Œ∏) are iid samples.\n\n\n\n\n\n","category":"method"},{"location":"#DifferentiableExpectations.jl","page":"Home","title":"DifferentiableExpectations.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Dev) (Image: Build Status) (Image: Coverage) (Image: Code Style: Blue)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package revolves around functions defined as expectations:","category":"page"},{"location":"","page":"Home","title":"Home","text":"F(theta) = mathbbE_p_thetaf(X)","category":"page"},{"location":"","page":"Home","title":"Home","text":"It allows the computation of approximate derivatives with respect to theta thanks to Monte-Carlo samples.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For more details, refer to the following paper:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Monte-Carlo Gradient Estimation in Machine Learning, Mohamed et al. (2020)","category":"page"}]
}
